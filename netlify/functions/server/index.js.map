{
  "version": 3,
  "sources": ["../../../app/entry.server.tsx", "../../../app/context.tsx", "../../../app/createEmotionCache.ts", "../../../app/root.tsx", "../../../app/features/layout/AppBody.tsx", "../../../app/features/layout/Footer.tsx", "../../../app/features/layout/const.ts", "../../../app/features/layout/SocialButton.tsx", "../../../app/features/layout/TopBar.tsx", "../../../app/hooks/useIsScrolling.tsx", "../../../app/features/shared/ColorModeButton.tsx", "../../../app/features/layout/Logo.tsx", "../../../app/hooks/useAssetUrl.ts", "../../../app/features/layout/NavItem.tsx", "../../../app/features/layout/SideBarDrawer.tsx", "../../../app/theme/theme.ts", "../../../app/theme/components.ts", "../../../app/theme/semanticTokens.ts", "../../../app/routes/experience.tsx", "../../../app/features/layout/PageContainer.tsx", "../../../app/features/shared/SectionHeading.tsx", "../../../app/features/work-experience/const.ts", "../../../app/routes/technology.tsx", "../../../app/features/technology/const.ts", "../../../app/routes/portfolio.tsx", "../../../app/features/portfolio/PortfolioCard.tsx", "../../../app/features/home/HomeBodyText.tsx", "../../../app/features/portfolio/const.ts", "../../../app/routes/contact.tsx", "../../../app/features/contact/ContactFormExtended.tsx", "../../../app/features/contact/ContactFormContainer.tsx", "../../../app/hooks/useAppToast.tsx", "../../../app/routes/_index.tsx", "../../../app/features/home/AboutMeSection.tsx", "../../../app/features/shared/ProfileAvatar.tsx", "../../../app/features/home/AcademicSection.tsx", "../../../app/features/home/ContactMeSection.tsx", "../../../app/features/home/IntroSection.tsx", "../../../app/features/home/ProgrammingCard.tsx", "../../../app/features/home/PortfolioSection.tsx", "../../../app/features/home/WorkExperienceSection.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["// entry.server.tsx\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\nimport { RemixServer } from \"@remix-run/react\";\nimport type { EntryContext } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext } from \"./context\";\nimport createEmotionCache from \"./createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(`<!DOCTYPE html>${markup}`, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "// context.tsx\nimport { createContext } from \"react\";\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n);\n", "// createEmotionCache.ts\nimport createCache from \"@emotion/cache\";\n\nexport const defaultCache = createEmotionCache();\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"cha\" });\n}\n", "import { ChakraProvider } from '@chakra-ui/react'\nimport { withEmotionCache } from '@emotion/react'\nimport { LinksFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration\n} from '@remix-run/react'\nimport React, { useContext, useEffect } from 'react'\nimport { ClientStyleContext, ServerStyleContext } from './context'\nimport { AppBody } from './features/layout/AppBody'\nimport theme from './theme/theme'\n\nexport const meta: MetaFunction = () => [\n  { charset: 'utf-8' },\n  { title: 'Chris Dillon - Senior Full Stack Engineer in Scotland' },\n  { name: 'viewport', content: 'width=device-width,initial-scale=1' },\n  { \n    name: 'description', \n    content: 'Senior Full Stack Engineer based in Scotland with expertise in C#, TypeScript, React, and modern web technologies. Specializing in building exceptional digital experiences.'\n  },\n  { name: 'theme-color', content: '#1a1b1e' },\n  { name: 'robots', content: 'index, follow' },\n  { property: 'og:type', content: 'website' },\n  { property: 'og:title', content: 'Chris Dillon - Senior Full Stack Engineer in Scotland' },\n  { \n    property: 'og:description', \n    content: 'Senior Full Stack Engineer based in Scotland with expertise in C#, TypeScript, React, and modern web technologies. Specializing in building exceptional digital experiences.'\n  },\n  { property: 'og:site_name', content: 'Chris Dillon Portfolio' },\n  { name: 'twitter:card', content: 'summary_large_image' },\n  { name: 'twitter:title', content: 'Chris Dillon - Senior Full Stack Engineer in Scotland' },\n  { \n    name: 'twitter:description', \n    content: 'Senior Full Stack Engineer based in Scotland with expertise in C#, TypeScript, React, and modern web technologies. Specializing in building exceptional digital experiences.'\n  },\n  { name: 'keywords', content: 'Senior Full Stack Engineer, Software Engineer Scotland, C#, TypeScript, React, .NET Developer, Web Development, Software Development Edinburgh, Glasgow Developer' }\n]\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n    { rel: 'preconnect', href: 'https://fonts.gstatic.com' },\n    {\n      rel: 'stylesheet',\n      href: 'https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap'\n    },\n    { rel: 'canonical', href: 'https://chrisdillon.dev' }\n  ]\n}\n\ninterface DocumentProps {\n  children: React.ReactNode\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext)\n    const clientStyleData = useContext(ClientStyleContext)\n\n    useEffect(() => {\n      emotionCache.sheet.container = document.head\n      const tags = emotionCache.sheet.tags\n      emotionCache.sheet.flush()\n      tags.forEach(tag => {\n        ;(emotionCache.sheet as any)._insertTag(tag)\n      })\n      clientStyleData?.reset()\n    }, [])\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(' ')}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n          <script type=\"application/ld+json\" dangerouslySetInnerHTML={{\n            __html: JSON.stringify({\n              '@context': 'https://schema.org',\n              '@type': 'Person',\n              name: 'Chris Dillon',\n              jobTitle: 'Senior Full Stack Engineer',\n              url: 'https://chrisdillon.dev',\n              sameAs: [\n                'https://www.linkedin.com/in/christopher-d-106005183/',\n                'https://github.com/ChrisPaulDillon'\n              ],\n              address: {\n                '@type': 'PostalAddress',\n                addressRegion: 'Scotland',\n                addressCountry: 'United Kingdom'\n              },\n              alumniOf: {\n                '@type': 'CollegeOrUniversity',\n                name: 'Glasgow Caledonian University'\n              },\n              knowsAbout: [\n                'Full Stack Development',\n                'C#',\n                'TypeScript',\n                'React',\n                'Software Architecture',\n                'Web Development'\n              ]\n            })\n          }} />\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    )\n  }\n)\n\nexport default function App() {\n  return (\n    <Document>\n      <ChakraProvider theme={theme}>\n        <AppBody>\n          <Outlet />\n        </AppBody>\n      </ChakraProvider>\n    </Document>\n  )\n}", "import { Container, Grid, GridItem } from '@chakra-ui/react'\nimport { PropsWithChildren } from 'react'\nimport { Footer } from './Footer'\nimport { TopBar } from './TopBar'\n\nexport const AppBody: React.FC<PropsWithChildren> = ({ children }) => (\n  <Grid templateRows=\"minmax(80vh, auto) auto\" overflowY=\"hidden\" h=\"100%\">\n    <TopBar />\n    <GridItem overflow=\"hidden\">\n      <Container pt={1} as=\"main\" h=\"100%\" maxW=\"1250px\">\n        {children}\n      </Container>\n    </GridItem>\n    <GridItem>\n      <Footer />\n    </GridItem>\n  </Grid>\n)\n", "import {\n  Box,\n  Container,\n  Grid,\n  GridItem,\n  Heading,\n  HeadingProps,\n  HStack,\n  Icon,\n  Link,\n  Text,\n  TextProps,\n  useColorModeValue,\n  VStack\n} from '@chakra-ui/react'\nimport { useLocation } from '@remix-run/react'\nimport { AiOutlineMail } from 'react-icons/ai'\nimport { FaGithub, FaLinkedin } from 'react-icons/fa'\nimport { GoLocation } from 'react-icons/go'\nimport { NAV_LINKS } from './const'\nimport { SocialButton } from './SocialButton'\n\nconst FooterText: React.FC<{ href?: string } & TextProps> = ({\n  href,\n  ...rest\n}) => {\n  const { pathname } = useLocation()\n  const isHighlighted = pathname === href\n  const textColor = useColorModeValue('gray.600', 'gray.400')\n\n  return (\n    <Text\n      fontSize=\"sm\"\n      color={textColor}\n      w=\"100%\"\n      lineHeight={1.6}\n      textDecor={isHighlighted ? 'underline' : 'inherit'}\n      _hover={{ color: useColorModeValue('gray.800', 'gray.200') }}\n      transition=\"color 0.2s\"\n      textAlign={{ base: 'center', md: 'left' }}\n      {...rest}\n    />\n  )\n}\n\nconst FooterHeading: React.FC<HeadingProps> = props => (\n  <Heading\n    size=\"md\"\n    mb={4}\n    color={useColorModeValue('gray.700', 'gray.300')}\n    textAlign={{ base: 'center', md: 'left' }}\n    {...props}\n  />\n)\n\nexport const Footer: React.FC = () => {\n  const borderColor = useColorModeValue('gray.200', 'gray.700')\n  const bgColor = useColorModeValue('white', 'gray.900')\n  \n  return (\n    <Box\n      as=\"footer\"\n      borderTop=\"1px\"\n      borderColor={borderColor}\n      bg={bgColor}\n      py={8}\n    >\n      <Container maxW=\"1250px\">\n        <Grid\n          templateColumns={{ base: '1fr', md: 'repeat(3, 1fr)' }}\n          gap={{ base: 8, md: 12 }}\n        >\n          <GridItem>\n            <FooterHeading>Browse</FooterHeading>\n            <VStack align={{ base: 'center', md: 'flex-start' }} spacing={2}>\n              {NAV_LINKS.map(link => (\n                <Link key={link.label} href={link.href}>\n                  <FooterText href={link.href}>{link.label}</FooterText>\n                </Link>\n              ))}\n            </VStack>\n          </GridItem>\n\n          <GridItem>\n            <FooterHeading>Contact</FooterHeading>\n            <VStack align={{ base: 'center', md: 'flex-start' }} spacing={3}>\n              <HStack spacing={3}>\n                <Icon as={GoLocation} color={useColorModeValue('gray.600', 'gray.400')} />\n                <FooterText>Scotland, United Kingdom</FooterText>\n              </HStack>\n              <HStack spacing={3}>\n                <Icon as={AiOutlineMail} color={useColorModeValue('gray.600', 'gray.400')} />\n                <FooterText>chrispauldillon@live.com</FooterText>\n              </HStack>\n            </VStack>\n          </GridItem>\n\n          <GridItem>\n            <FooterHeading>Connect</FooterHeading>\n            <HStack spacing={4} justify={{ base: 'center', md: 'flex-start' }}>\n              <SocialButton\n                label=\"LinkedIn\"\n                href=\"https://www.linkedin.com/in/christopher-d-106005183/\"\n              >\n                <FaLinkedin />\n              </SocialButton>\n              <SocialButton\n                label=\"GitHub\"\n                href=\"https://github.com/ChrisPaulDillon\"\n              >\n                <FaGithub />\n              </SocialButton>\n            </HStack>\n          </GridItem>\n        </Grid>\n\n        <Text\n          fontSize=\"xs\"\n          textAlign=\"center\"\n          color={useColorModeValue('gray.500', 'gray.500')}\n          mt={8}\n        >\n          \u00A9 {new Date().getFullYear()} Chris Dillon. All rights reserved\n        </Text>\n      </Container>\n    </Box>\n  )\n}", "import { BsFolderFill } from 'react-icons/bs'\nimport {\n  MdHome,\n  MdOutlineBiotech,\n  MdPermContactCalendar,\n  MdWork\n} from 'react-icons/md'\n\nexport type NavItemType = {\n  icon: any\n  href: string\n  label: string\n  onClose?: () => void\n  isScrolling?: boolean\n}\n\nexport const NAV_LINKS: NavItemType[] = [\n  { icon: MdHome, href: '/', label: 'Home' },\n  { icon: BsFolderFill, href: '/portfolio', label: 'Portfolio' },\n  { icon: MdOutlineBiotech, href: '/technology', label: 'Technologies' },\n  { icon: MdWork, href: '/experience', label: 'Experience' },\n  { icon: MdPermContactCalendar, href: '/contact', label: 'Contact' }\n]\n", "import {\n  ButtonProps,\n  chakra,\n  useColorModeValue,\n  VisuallyHidden\n} from '@chakra-ui/react'\n\ninterface SocialButtonProps extends ButtonProps {\n  children?: any\n  label?: any\n  href?: any\n}\n\nexport const SocialButton: React.FC<SocialButtonProps> = ({\n  children,\n  label,\n  href\n}) => {\n  return (\n    <chakra.button\n      bg={useColorModeValue('blackAlpha.100', 'whiteAlpha.100')}\n      rounded={'full'}\n      w={8}\n      h={8}\n      cursor={'pointer'}\n      as={'a'}\n      href={href}\n      display={'inline-flex'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      transition={'background 0.3s ease'}\n      _hover={{\n        bg: useColorModeValue('blackAlpha.200', 'whiteAlpha.200')\n      }}\n    >\n      <VisuallyHidden>{label}</VisuallyHidden>\n      {children}\n    </chakra.button>\n  )\n}", "import {\n  Box,\n  BoxProps,\n  Container,\n  Flex,\n  HStack,\n  IconButton,\n  useColorModeValue,\n  useDisclosure\n} from '@chakra-ui/react'\nimport { FiMenu } from 'react-icons/fi'\nimport { useIsScrolling } from '../../hooks/useIsScrolling'\nimport { ColorModeButton } from '../shared/ColorModeButton'\nimport { Logo } from './Logo'\nimport { NavItem } from './NavItem'\nimport { SideBarDrawer } from './SideBarDrawer'\nimport { NAV_LINKS } from './const'\n\nexport const TopBar: React.FC<BoxProps> = props => {\n  const { isScrolling } = useIsScrolling()\n  const { onOpen, onClose, isOpen } = useDisclosure()\n\n  const bgColor = useColorModeValue('white', 'gray.800')\n  const scrollBgColor = useColorModeValue('white', 'gray.800')\n  const shadowColor = useColorModeValue(\n    '0 2px 10px rgba(0,0,0,0.05)',\n    '0 2px 10px rgba(0,0,0,0.2)'\n  )\n\n  return (\n    <>\n      <SideBarDrawer isOpen={isOpen} onClose={onClose} />\n      <Box\n        as=\"header\"\n        position=\"fixed\"\n        top={0}\n        w=\"full\"\n        zIndex={999}\n        bg={isScrolling ? scrollBgColor : bgColor}\n        transition=\"all 0.3s ease\"\n        boxShadow={isScrolling ? shadowColor : 'none'}\n        backdropFilter={isScrolling ? 'blur(10px)' : 'none'}\n        {...props}\n      >\n        <Container maxW=\"1250px\">\n          <Flex\n            px={{ base: 4, md: 6 }}\n            py={3}\n            align=\"center\"\n            justify=\"space-between\"\n          >\n            <Box>\n              <Logo height=\"40px\" width=\"40px\" />\n            </Box>\n\n            <Flex\n              as=\"nav\"\n              display={{ base: 'none', lg: 'flex' }}\n              align=\"center\"\n              gap={1}\n            >\n              {NAV_LINKS.map((item, idx) => (\n                <NavItem key={idx} isScrolling={isScrolling} {...item} />\n              ))}\n            </Flex>\n\n            <HStack spacing={2}>\n              <ColorModeButton \n                size=\"sm\"\n                variant=\"ghost\"\n                aria-label=\"Toggle color mode\"\n              />\n              <IconButton\n                aria-label=\"Open menu\"\n                variant=\"ghost\"\n                display={{ base: 'inline-flex', lg: 'none' }}\n                onClick={onOpen}\n                icon={<FiMenu />}\n                size=\"sm\"\n              />\n            </HStack>\n          </Flex>\n        </Container>\n      </Box>\n    </>\n  )\n}", "import { useEffect, useState } from 'react'\n\nexport const useIsScrolling = () => {\n  const [isScrolling, setIsScrolling] = useState<boolean>(false)\n\n  const handleScroll = () => {\n    const position = window.pageYOffset\n    setIsScrolling(position > 0)\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true })\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  return { isScrolling }\n}\n", "import { MoonIcon, SunIcon } from '@chakra-ui/icons'\nimport {\n  IconButton,\n  IconButtonProps,\n  useColorMode,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { AnimatePresence, motion } from 'framer-motion'\n\nexport const ColorModeButton: React.FC<Omit<IconButtonProps, 'aria-label'>> = ({\n  ...rest\n}) => {\n  const { toggleColorMode } = useColorMode()\n\n  return (\n    <AnimatePresence mode=\"wait\" initial={false}>\n      <motion.div\n        style={{ display: 'inline-block' }}\n        key={useColorModeValue('light', 'dark')}\n        initial={{ y: -10, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ y: 10, opacity: 0 }}\n        transition={{ duration: 0.15 }}\n      >\n        <IconButton\n          aria-label=\"Toggle color mode\"\n          variant=\"ghost\"\n          color={useColorModeValue('gray.600', 'gray.300')}\n          icon={useColorModeValue(\n            <MoonIcon boxSize={4} />, \n            <SunIcon boxSize={4} />\n          )}\n          onClick={toggleColorMode}\n          size=\"sm\"\n          p={1}\n          minW={8}\n          h={8}\n          _hover={{\n            bg: useColorModeValue('gray.100', 'gray.700'),\n            transform: 'translateY(-1px)'\n          }}\n          {...rest}\n        />\n      </motion.div>\n    </AnimatePresence>\n  )\n}", "import { Image } from '@chakra-ui/react'\nimport { Link } from '@remix-run/react'\nimport { useAssetUrl } from '../../hooks/useAssetUrl'\n\ninterface LogoProps {\n  width?: string | number\n  height?: string | number\n}\n\nexport const Logo: React.FC<LogoProps> = props => {\n  const logoUrl = useAssetUrl('/images/logo.svg')\n  \n  return (\n    <Link to=\"/\">\n      <Image\n        alt=\"logo\"\n        src={logoUrl}\n        height=\"50px\"\n        width=\"50px\"\n        {...props}\n      />\n    </Link>\n  )\n}", "import { useLocation } from '@remix-run/react'\n\nexport function useAssetUrl(assetPath: string) {\n  const location = useLocation()\n  const baseUrl = location.pathname === '/' ? '' : '..'\n  return `${baseUrl}${assetPath}`\n}", "import {\n  Button,\n  ButtonProps,\n  Icon,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { Link, useLocation } from '@remix-run/react'\nimport { NavItemType } from './const'\n\ntype NavItemProps = NavItemType & ButtonProps\n\nexport const NavItem: React.FC<NavItemProps> = ({\n  icon,\n  href,\n  label,\n  onClose,\n  isScrolling,\n  ...rest\n}) => {\n  const { pathname } = useLocation()\n  const active = pathname === href\n  \n  const textColor = useColorModeValue('gray.700', 'gray.200')\n  const activeTextColor = useColorModeValue('purple.600', 'purple.300')\n  const hoverBg = useColorModeValue('gray.100', 'gray.700')\n  const activeBg = useColorModeValue('purple.50', 'purple.900')\n\n  return (\n    <Link to={href}>\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        px={3}\n        py={2}\n        display=\"flex\"\n        alignItems=\"center\"\n        gap={2}\n        color={active ? activeTextColor : textColor}\n        bg={active ? activeBg : 'transparent'}\n        _hover={{\n          bg: hoverBg,\n          transform: 'translateY(-1px)'\n        }}\n        onClick={onClose}\n        transition=\"all 0.2s\"\n        {...rest}\n      >\n        <Icon as={icon} boxSize={4} />\n        <Text\n          fontSize=\"sm\"\n          fontWeight={active ? 'semibold' : 'medium'}\n        >\n          {label}\n        </Text>\n      </Button>\n    </Link>\n  )\n}", "import {\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerProps,\n  useColorModeValue,\n  VStack\n} from '@chakra-ui/react'\nimport { Logo } from './Logo'\nimport { NavItem } from './NavItem'\nimport { NAV_LINKS } from './const'\n\nexport const SideBarDrawer: React.FC<Omit<DrawerProps, 'children'>> = ({\n  ...rest\n}) => {\n  const { onClose } = { ...rest }\n  const bgColor = useColorModeValue('white', 'gray.800')\n  \n  return (\n    <Drawer placement=\"left\" size=\"xs\" {...rest}>\n      <DrawerOverlay />\n      <DrawerContent bg={bgColor}>\n        <DrawerCloseButton size=\"lg\" />\n        <DrawerHeader borderBottomWidth=\"1px\" px={4} py={4}>\n          <Logo height=\"40px\" width=\"40px\" />\n        </DrawerHeader>\n        <DrawerBody px={2} py={4}>\n          <VStack spacing={2} align=\"stretch\">\n            {NAV_LINKS.map((item, idx) => (\n              <NavItem\n                key={idx}\n                w=\"full\"\n                justifyContent=\"flex-start\"\n                {...item}\n                onClose={onClose}\n              />\n            ))}\n          </VStack>\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  )\n}", "import { extendTheme } from '@chakra-ui/react'\nimport { StyleFunctionProps, mode } from '@chakra-ui/theme-tools'\nimport { components } from './components'\nimport { semanticTokens } from './semanticTokens'\n\nconst styles = {\n  global: (props: Record<string, any> | StyleFunctionProps) => ({\n    body: {\n      bg: mode('gray.50', '#1a1b1e')(props)\n    }\n  })\n}\n\nconst fonts = {\n  heading: `'Rubik', sans-serif`,\n  body: `'Rubik', sans-serif`\n}\n\nconst colors = {\n  brand: {\n    50: '#f0e4ff',\n    100: '#cbb2ff',\n    200: '#a480ff',\n    300: '#7c4dff',\n    400: '#551bff',\n    500: '#3b01e6',\n    600: '#2e00b4',\n    700: '#210082',\n    800: '#140051',\n    900: '#070021'\n  },\n  accent: {\n    50: '#ffe4eb',\n    100: '#ffb3c5',\n    200: '#fc819f',\n    300: '#f94f79',\n    400: '#f61d53',\n    500: '#dd0939',\n    600: '#ad032c',\n    700: '#7c001f',\n    800: '#4c0012',\n    900: '#1f0007'\n  }\n}\n\nconst config = {\n  initialColorMode: 'dark',\n  useSystemColorMode: false\n}\n\nconst theme = extendTheme({\n  config,\n  styles,\n  components: {\n    ...components,\n    Button: {\n      defaultProps: {\n        colorScheme: 'brand'\n      }\n    }\n  },\n  colors,\n  semanticTokens: {\n    ...semanticTokens,\n    colors: {\n      primary: {\n        default: 'brand.500',\n        _dark: 'brand.300'\n      },\n      secondary: {\n        default: 'accent.500',\n        _dark: 'accent.300'\n      },\n      faded: {\n        default: 'gray.700',\n        _dark: 'gray.400'\n      },\n      text: {\n        default: 'gray.800',\n        _dark: 'gray.200'\n      },\n      border: {\n        default: 'gray.200',\n        _dark: 'gray.700'\n      }\n    }\n  },\n  fonts\n})\n\nexport default theme", "import { mode } from '@chakra-ui/theme-tools'\n\nexport const components = {\n  Button: {\n    defaultProps: {\n      colorScheme: 'brand'\n    }\n  },\n  Link: {\n    baseStyle: props => ({\n      color: mode('brand.600', 'brand.300')(props),\n      textUnderlineOffset: 3\n    })\n  },\n  Text: {\n    baseStyle: props => ({\n      color: mode('gray.800', 'gray.200')(props),\n      textUnderlineOffset: 3,\n      fontWeight: 'normal'\n    })\n  },\n  Heading: {\n    baseStyle: props => ({\n      color: mode('gray.800', 'gray.100')(props),\n      textUnderlineOffset: 3\n    })\n  }\n}", "export const semanticTokens = {\n  colors: {\n    primary: {\n      default: 'red.600',\n      _dark: 'red.400'\n    },\n    secondary: {\n      default: 'purple.600',\n      _dark: 'purple.400'\n    },\n    faded: {\n      default: 'gray.700',\n      _dark: 'gray.400'\n    },\n    text: {\n      default: 'gray.800',\n      _dark: 'gray.400'\n    },\n    border: {\n      default: 'gray.300',\n      _dark: 'gray.700'\n    }\n  }\n}\n", "import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Grid,\n  Heading,\n  Icon,\n  List,\n  ListIcon,\n  ListItem,\n  Stack,\n  Tag,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { MdCheckCircle, MdWork } from 'react-icons/md'\nimport { PageContainer } from '../features/layout/PageContainer'\nimport { SectionHeading } from '../features/shared/SectionHeading'\nimport { WORK_EXPERIENCE_DATA } from '../features/work-experience/const'\n\nfunction calculateExperience(startDate: Date) {\n  const currentDate = new Date()\n  const timeDifference = currentDate.getTime() - startDate.getTime()\n  const millisecondsInYear = 1000 * 60 * 60 * 24 * 365.25\n  const millisecondsInMonth = millisecondsInYear / 12\n  \n  const years = Math.floor(timeDifference / millisecondsInYear)\n  const months = Math.floor((timeDifference % millisecondsInYear) / millisecondsInMonth)\n  \n  return { years, months }\n}\n\nconst ExperiencePage = () => {\n  const { years } = calculateExperience(new Date('2017-09-24'))\n  const cardBg = useColorModeValue('white', 'gray.800')\n  const borderColor = useColorModeValue('brand.100', 'brand.800')\n  const iconBg = useColorModeValue('brand.50', 'brand.900')\n  const tagBg = useColorModeValue('accent.50', 'accent.900')\n  const tagColor = useColorModeValue('accent.800', 'accent.200')\n  const subtleText = useColorModeValue('gray.600', 'gray.400')\n  const headingColor = useColorModeValue('gray.900', 'white')\n  \n  return (\n    <PageContainer>\n      <Stack spacing={8}>\n        <Box>\n          <SectionHeading mb={2} color={headingColor}>\n            Professional Experience\n          </SectionHeading>\n          <Text\n            fontSize=\"lg\"\n            color={subtleText}\n            maxW=\"2xl\"\n          >\n            {years}+ years of experience building scalable applications and leading development teams\n          </Text>\n        </Box>\n\n        <Grid gap={8}>\n          {WORK_EXPERIENCE_DATA.map((experience, index) => (\n            <Card\n              key={index}\n              bg={cardBg}\n              borderWidth=\"2px\"\n              borderColor={borderColor}\n              borderRadius=\"2xl\"\n              overflow=\"hidden\"\n              transition=\"all 0.3s ease\"\n              _hover={{\n                transform: 'translateY(-4px)',\n                boxShadow: 'xl',\n                borderColor: useColorModeValue('brand.300', 'brand.600')\n              }}\n            >\n              <CardHeader pb={4}>\n                <Flex align=\"center\" gap={4}>\n                  <Box\n                    p={3}\n                    borderRadius=\"xl\"\n                    bg={iconBg}\n                  >\n                    <Icon \n                      as={MdWork} \n                      boxSize={6}\n                      color={useColorModeValue('brand.500', 'brand.200')}\n                    />\n                  </Box>\n                  <Box flex=\"1\">\n                    <Heading\n                      size=\"lg\"\n                      color={headingColor}\n                      letterSpacing=\"tight\"\n                    >\n                      {experience.role}\n                    </Heading>\n                    <Flex\n                      align={{ base: 'start', md: 'center' }}\n                      direction={{ base: 'column', md: 'row' }}\n                      gap={{ base: 1, md: 2 }}\n                      mt={2}\n                    >\n                      <Text\n                        fontSize=\"md\"\n                        color={subtleText}\n                        fontWeight=\"medium\"\n                      >\n                        {experience.companyName}\n                      </Text>\n                      <Text\n                        fontSize=\"md\"\n                        color={subtleText}\n                      >\n                        {experience.date}\n                      </Text>\n                    </Flex>\n                  </Box>\n                </Flex>\n              </CardHeader>\n\n              <CardBody pt={0}>\n                <Stack spacing={6}>\n                  <Text \n                    color={useColorModeValue('gray.700', 'gray.300')}\n                    fontSize=\"lg\"\n                  >\n                    {experience.description}\n                  </Text>\n\n                  <Box>\n                    <Text\n                      fontSize=\"md\"\n                      fontWeight=\"semibold\"\n                      color={headingColor}\n                      mb={3}\n                    >\n                      Key Responsibilities\n                    </Text>\n                    <List spacing={3}>\n                      {experience.responsibilities.map((responsibility, idx) => (\n                        <ListItem\n                          key={idx}\n                          fontSize=\"md\"\n                          color={useColorModeValue('gray.700', 'gray.300')}\n                          display=\"flex\"\n                          alignItems=\"flex-start\"\n                        >\n                          <ListIcon\n                            as={MdCheckCircle}\n                            color={useColorModeValue('brand.500', 'brand.200')}\n                            mt={1}\n                          />\n                          {responsibility}\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Box>\n\n                  <Box>\n                    <Text\n                      fontSize=\"md\"\n                      fontWeight=\"semibold\"\n                      color={headingColor}\n                      mb={3}\n                    >\n                      Technologies\n                    </Text>\n                    <Flex gap={2} flexWrap=\"wrap\">\n                      {experience.technologies.map((tech, idx) => (\n                        <Tag\n                          key={idx}\n                          size=\"md\"\n                          bg={tagBg}\n                          color={tagColor}\n                          borderRadius=\"full\"\n                          px={4}\n                          py={2}\n                          fontWeight=\"medium\"\n                          _hover={{\n                            transform: 'translateY(-2px)',\n                            boxShadow: 'sm'\n                          }}\n                          transition=\"all 0.2s\"\n                        >\n                          {tech}\n                        </Tag>\n                      ))}\n                    </Flex>\n                  </Box>\n                </Stack>\n              </CardBody>\n            </Card>\n          ))}\n        </Grid>\n      </Stack>\n    </PageContainer>\n  )\n}\n\nexport default ExperiencePage", "import { Box, BoxProps } from '@chakra-ui/react'\n\nexport const PageContainer: React.FC<BoxProps> = props => (\n  <Box w=\"100%\" my={'100px'} {...props} />\n)\n", "import { Heading, HeadingProps } from '@chakra-ui/react'\n\nexport const SectionHeading: React.FC<HeadingProps> = props => (\n  <Heading\n    textDecor=\"red underline\"\n    pb={3}\n    as=\"h2\"\n    textUnderlineOffset={10}\n    textAlign={{ base: 'center', sm: 'center', lg: 'left' }}\n    fontSize={{ base: '2xl', sm: '3xl', md: '4xl' }}\n    lineHeight={{ base: 1.4, md: 1.2 }}\n    {...props}\n  />\n)", "export type WorkExperienceData = {\n  companyName: string\n  role: string\n  description: string\n  date: string\n  responsibilities: string[]\n  technologies: string[]\n}\n\nexport const WORK_EXPERIENCE_DATA: WorkExperienceData[] = [\n  {\n    companyName: 'Serial Affinity',\n    role: 'Senior Full Stack Engineer',\n    description:\n      'Leading development of enterprise-scale web applications and mentoring junior developers.',\n    date: 'June 2023 - Present',\n    responsibilities: [\n      'Architected and implemented scalable microservices using .NET Core and React',\n      'Led technical design discussions and code reviews for team of 5 developers',\n      'Implemented CI/CD pipelines reducing deployment time by 40%',\n      'Mentored junior developers and conducted technical interviews'\n    ],\n    technologies: [\n      'C#',\n      '.NET',\n      'Go',\n      'React',\n      'TypeScript',\n      'Next.js',\n      'Azure',\n      'Docker'\n    ]\n  },\n  {\n    companyName: 'Serial Affinity',\n    role: 'Full Stack Engineer',\n    description:\n      'Developed and maintained complex web applications using modern technologies.',\n    date: 'March 2020 - June 2023',\n    responsibilities: [\n      'Developed full-stack features using React and .NET Core',\n      'Implemented real-time data synchronization using SignalR',\n      'Contributed to architecture decisions and technical documentation'\n    ],\n    technologies: [\n      'C#',\n      '.NET',\n      'React',\n      'TypeScript',\n      'Next.js',\n      'Azure',\n      'Docker'\n    ]\n  },\n  {\n    companyName: 'My1Login',\n    role: 'Graduate Full Stack Engineer',\n    description: 'Contributed to identity and access management solutions.',\n    date: 'September 2017 - March 2020',\n    responsibilities: [\n      'Developed secure authentication workflows',\n      'Built responsive web interfaces using React',\n      'Implemented RESTful APIs using .NET Core',\n      'Participated in agile development processes'\n    ],\n    technologies: ['C#', '.NET Core', 'React', 'OAuth', 'SAML', 'SQL Server']\n  }\n]\n", "import { Box, Container, Flex, Heading, Image, Text, useColorModeValue, VStack } from '@chakra-ui/react'\nimport { PageContainer } from '../features/layout/PageContainer'\nimport { SectionHeading } from '../features/shared/SectionHeading'\nimport { TECHNOLOGIES, TechnologyItem } from '../features/technology/const'\nimport { useAssetUrl } from '../hooks/useAssetUrl'\n\nconst TechnologyCard = ({ title, imgSrc }: TechnologyItem) => {\n  const imageUrl = useAssetUrl(imgSrc)\n  const cardBg = useColorModeValue('white', 'gray.800')\n  const borderColor = useColorModeValue('purple.100', 'purple.700')\n  const hoverBorderColor = useColorModeValue('purple.300', 'purple.500')\n  \n  return (\n    <Box\n      bg={cardBg}\n      borderWidth=\"1px\"\n      borderColor={borderColor}\n      borderRadius=\"xl\"\n      overflow=\"hidden\"\n      p={4}\n      w={{ base: '150px', md: '180px' }}\n      transition=\"all 0.3s ease\"\n      _hover={{\n        transform: 'translateY(-4px)',\n        borderColor: hoverBorderColor,\n        boxShadow: 'lg'\n      }}\n    >\n      <VStack spacing={4}>\n        <Box \n          position=\"relative\"\n          w=\"full\"\n          h={{ base: '60px', md: '80px' }}\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Image\n            src={imageUrl}\n            alt={title}\n            maxH=\"100%\"\n            maxW=\"100%\"\n            objectFit=\"contain\"\n            loading=\"lazy\"\n            transition=\"transform 0.3s ease\"\n            _hover={{ transform: 'scale(1.1)' }}\n          />\n        </Box>\n        <Text\n          fontSize={{ base: 'sm', md: 'md' }}\n          fontWeight=\"medium\"\n          textAlign=\"center\"\n          color={useColorModeValue('gray.700', 'gray.200')}\n        >\n          {title}\n        </Text>\n      </VStack>\n    </Box>\n  )\n}\n\nconst TechnologyPage = () => {\n  const sectionBg = useColorModeValue('gray.50', 'gray.900')\n  \n  return (\n    <PageContainer>\n      <VStack spacing={8} align=\"stretch\">\n        <SectionHeading>Technology Experience</SectionHeading>\n        \n        <Box\n          bg={sectionBg}\n          borderRadius=\"2xl\"\n          p={{ base: 4, md: 8 }}\n          shadow=\"sm\"\n        >\n          <Container maxW=\"container.xl\" px={0}>\n            <Flex\n              wrap=\"wrap\"\n              gap={{ base: 4, md: 6 }}\n              justify={{ base: 'center', md: 'flex-start' }}\n            >\n              {TECHNOLOGIES.map((tech, index) => (\n                <TechnologyCard key={index} {...tech} />\n              ))}\n            </Flex>\n          </Container>\n        </Box>\n      </VStack>\n    </PageContainer>\n  )\n}\n\nexport default TechnologyPage", "export type TechnologyItem = {\n  title: string;\n  imgSrc: string;\n}\n\nexport const TECHNOLOGIES: TechnologyItem[] = [\n  { title: 'React', imgSrc: '/images/technologies/react.svg' },\n  { title: 'NextJS', imgSrc: '/images/technologies/nextjs.png' },\n  { title: 'Redux', imgSrc: '/images/technologies/redux.png' },\n  { title: 'TypeScript', imgSrc: '/images/technologies/typescript.gif' },\n  { title: 'Hardhat', imgSrc: '/images/technologies/hardhat.jpg' },\n  { title: 'Solidity', imgSrc: '/images/technologies/solidity.png' },\n  { title: 'Ethereum', imgSrc: '/images/technologies/ethereum.jpg' },\n  { title: 'SQL', imgSrc: '/images/technologies/sql.jpg' },\n  { title: 'DotNetCore', imgSrc: '/images/technologies/dotnetcore.png' },\n  { title: 'Chakra UI', imgSrc: '/images/technologies/chakraui.png' },\n  { title: 'Jest', imgSrc: '/images/technologies/jest.png' },\n  { title: 'Truffle', imgSrc: '/images/technologies/truffle.jpg' }\n]", "import { Flex } from '@chakra-ui/react'\nimport { PageContainer } from '../features/layout/PageContainer'\nimport { PortfolioCard } from '../features/portfolio/PortfolioCard'\nimport { PORTFOLIO_ITEMS } from '../features/portfolio/const'\nimport { SectionHeading } from '../features/shared/SectionHeading'\n\nconst PortfolioPage = () => (\n  <PageContainer>\n    <SectionHeading>Portfolio</SectionHeading>\n    <Flex\n      flexDir={'row'}\n      flexWrap={'wrap'}\n      justifyContent={{ base: 'center', lg: 'left' }}\n    >\n      {PORTFOLIO_ITEMS.map(item => (\n        <PortfolioCard key={item.title} {...item} />\n      ))}\n    </Flex>\n  </PageContainer>\n)\n\nexport default PortfolioPage\n", "import {\n  Box,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  CardProps,\n  Flex,\n  Heading,\n  Icon,\n  Image,\n  Stack,\n  Tag,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { Link } from '@remix-run/react'\nimport { BsFolderFill, BsGithub } from 'react-icons/bs'\nimport { useAssetUrl } from '../../hooks/useAssetUrl'\nimport { HomeBodyText } from '../home/HomeBodyText'\nimport { PortfolioLinkItem, ProjectCategories } from './const'\n\nexport interface PortfolioCardProps extends Omit<CardProps, 'id'> {\n  title: string\n  description: string\n  extendedDescription: string\n  linkItems: PortfolioLinkItem[]\n  categories: ProjectCategories[]\n}\n\nexport const PortfolioCard: React.FC<PortfolioCardProps> = ({\n  title,\n  description,\n  linkItems,\n  categories,\n  ...rest\n}) => {\n  const linkItem = linkItems[0]\n  const imageUrl = useAssetUrl('/images/programming.png')\n  const gradientLight = 'linear-gradient(to right, #ffffff, #f8f9fa)'\n  const gradientDark = 'linear-gradient(to right, #1a202c, #2d3748)'\n  const cardBg = useColorModeValue(gradientLight, gradientDark)\n  const borderColor = useColorModeValue('purple.100', 'purple.900')\n  const shadowColor = useColorModeValue(\n    '0 4px 6px rgba(160, 174, 192, 0.2)',\n    '0 4px 6px rgba(9, 17, 28, 0.4)'\n  )\n  \n  return (\n    <Card\n      w={{ base: 'full', lg: '47%' }}\n      mx={2}\n      my={4}\n      bg={cardBg}\n      borderWidth=\"1px\"\n      borderColor={borderColor}\n      borderRadius=\"2xl\"\n      overflow=\"hidden\"\n      transition=\"all 0.4s ease-in-out\"\n      boxShadow={shadowColor}\n      _hover={{\n        transform: 'translateY(-8px)',\n        boxShadow: useColorModeValue(\n          '0 12px 24px rgba(160, 174, 192, 0.3)',\n          '0 12px 24px rgba(9, 17, 28, 0.5)'\n        )\n      }}\n      {...rest}\n    >\n      <CardHeader pb={2}>\n        <Flex justify=\"space-between\" align=\"center\">\n          <Flex align=\"center\" gap={3}>\n            <Box\n              p={{ base: 1.5, md: 2 }}\n              borderRadius=\"lg\"\n              bg={useColorModeValue('red.50', 'red.900')}\n            >\n              <Icon \n                as={BsFolderFill} \n                boxSize={{ base: 3, md: 5 }}\n                color={useColorModeValue('red.500', 'red.200')} \n              />\n            </Box>\n            <Heading\n              size={{ base: 'sm', md: 'md' }}\n              textAlign={{ base: 'center', lg: 'left' }}\n              bgGradient={useColorModeValue(\n                'linear(to-r, purple.600, red.500)',\n                'linear(to-r, purple.200, red.200)'\n              )}\n              bgClip=\"text\"\n            >\n              {title}\n            </Heading>\n          </Flex>\n          <Link to={linkItem.linkUrl}>\n            <Icon \n              as={BsGithub} \n              boxSize={{ base: 5, md: 6 }}\n              color={useColorModeValue('gray.600', 'gray.300')}\n              _hover={{ \n                color: useColorModeValue('purple.500', 'purple.300'),\n                transform: 'scale(1.1)'\n              }}\n              transition=\"all 0.3s\"\n            />\n          </Link>\n        </Flex>\n      </CardHeader>\n\n      <CardBody py={4}>\n        <Stack spacing={4}>\n          <HomeBodyText \n            fontSize={{ base: 'sm', md: 'md' }}\n            color={useColorModeValue('gray.600', 'gray.300')}\n            lineHeight=\"1.6\"\n          >\n            {description}\n          </HomeBodyText>\n          <Box \n            position=\"relative\" \n            overflow=\"hidden\" \n            borderRadius=\"xl\"\n            boxShadow=\"inner\"\n          >\n            <Link to={linkItem.linkUrl}>\n              <Image\n                src={imageUrl}\n                alt={title}\n                w=\"full\"\n                h=\"200px\"\n                objectFit=\"cover\"\n                transition=\"transform 0.5s ease\"\n                _hover={{ transform: 'scale(1.08)' }}\n                loading=\"lazy\"\n              />\n            </Link>\n          </Box>\n        </Stack>\n      </CardBody>\n\n      <CardFooter \n        pt={0} \n        flexWrap=\"wrap\" \n        gap={2}\n        sx={{\n          '& > button': {\n            minW: '136px'\n          }\n        }}\n      >\n        {categories?.map(category => (\n          <Tag\n            key={category}\n            bgGradient={useColorModeValue(\n              'linear(to-r, purple.100, pink.100)',\n              'linear(to-r, purple.900, pink.900)'\n            )}\n            color={useColorModeValue('purple.800', 'purple.100')}\n            size=\"sm\"\n            borderRadius=\"full\"\n            px={3}\n            py={1}\n            _hover={{\n              transform: 'translateY(-1px)',\n              bgGradient: useColorModeValue(\n                'linear(to-r, purple.200, pink.200)',\n                'linear(to-r, purple.800, pink.800)'\n              )\n            }}\n            transition=\"all 0.3s\"\n          >\n            <Text\n              fontSize={{ base: 'xs', md: 'sm' }}\n              fontWeight=\"medium\"\n            >\n              {category}\n            </Text>\n          </Tag>\n        ))}\n      </CardFooter>\n    </Card>\n  )\n}", "import { Text, TextProps } from '@chakra-ui/react'\n\nexport const HomeBodyText: React.FC<TextProps> = props => {\n  return (\n    <Text\n      textAlign={{ base: 'center', lg: 'left' }}\n      fontSize={{ base: 'md', sm: 'lg' }}\n      lineHeight={{ base: 1.6, md: 1.8 }}\n      {...props}\n    />\n  )\n}", "import { PortfolioCardProps } from './PortfolioCard'\n\nexport type ProjectCategories =\n  | 'Python'\n  | 'Blockchain'\n  | 'React'\n  | 'C#'\n  | 'Ethers.js'\n  | 'Web3'\n  | 'Solidity'\n  | 'Discord API'\n  | 'EVM'\n  | 'Chakra UI'\n  | 'Web Scraping'\n  | 'Data Analysis'\n  | 'Redux'\n  | 'Coingecko API'\n  | 'Shadcn'\n  | 'Next'\n  | 'Tailwind'\n\nexport interface PortfolioLinkItem {\n  linkUrl: string\n  linkText: string\n}\n\nexport const PORTFOLIO_ITEMS: PortfolioCardProps[] = [\n  {\n    id: 1,\n    title: 'Chris Dillon Fitness',\n    description:\n      'A Personal Trainer website designed with the latest version of Next, App Router, Tailwind & Shadcn',\n    extendedDescription: '',\n    linkItems: [\n      {\n        linkText: 'Github',\n        linkUrl: 'https://github.com/ChrisPaulDillon/personal-trainer-app'\n      }\n    ],\n    categories: ['React', 'Shadcn', 'Next', 'Tailwind']\n  },\n  {\n    id: 2,\n    title: 'ZumoSwap',\n    description:\n      'A singular token exchange designed to swap tokens and Ether in a decentralised manner.',\n    extendedDescription:\n      'ZumoSwap was a pilot project that allowed for swapping a token with ether on the Ethereum Testnet. Users can connect their wallet to the blockchain via a 3rd party such as MetaMask and interact with the blockchain through the Decentralised App (dApp). Built with Chakra UI, NextJs & Redux.',\n    linkItems: [\n      {\n        linkText: 'Github',\n        linkUrl: 'https://github.com/ChrisPaulDillon/ZumoDEX'\n      }\n    ],\n    categories: ['Solidity', 'React', 'Web3', 'Ethers.js', 'Redux', 'Chakra UI']\n  },\n  {\n    id: 3,\n    title: 'Crypto Trading Bot',\n    description:\n      'Polls various cryptocurrency exchanges and once a new coin listing has been announced, purchases on the GateIO exchange. Also announces on Discord.',\n    extendedDescription:\n      'Cryptocurrency Bot which polls various exchanges (KuCoin, Binance) listening for changes in coin announcements. Once a new coin has been announced by the exchange, the bot will then proceed to buy the same token on the GateIo exchange and sell when it reaches a set percentage of profit. The coin listing is also announced on Discord.',\n    linkItems: [\n      {\n        linkText: 'GitHub',\n        linkUrl:\n          'https://github.com/ChrisPaulDillon/CryptoTradingBotDiscordAnnouncer'\n      }\n    ],\n    categories: ['C#', 'Discord API', 'Web Scraping']\n  },\n  {\n    id: 4,\n    title: 'EVM Benchmarking',\n    description:\n      'Performance analysis of modern EVM implementations. This includes Cardanos novel KEVM implementation.',\n    extendedDescription:\n      'This was part of my PhD research, investing the performance of different EVM client implementations. Factors such as the OS running the node client was also evaluated, with surprising results. Also includes a Big Data pipeline for automatically generating graph results using python.',\n    linkItems: [\n      {\n        linkText: 'GitHub',\n        linkUrl: 'https://github.com/ChrisPaulDillon/SmartContractBenchmarking'\n      }\n    ],\n    categories: ['Python', 'Blockchain', 'EVM', 'Data Analysis']\n  },\n  {\n    id: 5,\n    title: 'PowerBuddy',\n    description:\n      'Weightlifting tracker designed to automatically log personal bests and generate custom weightlifting templates based on the individuals criteria.',\n    extendedDescription:\n      'Weightlifting tracker designed to automatically log personal bests and generate custom weightlifting templates based on the individuals criteria. Choose from popular powerlifting programme templates such as 5/3/1, Stronglifts 5x5, Russian Squat Routine and many more. Personal bests are automatically recorded, giving a historical timeline of your progress!',\n    linkItems: [\n      {\n        linkText: 'Frontend',\n        linkUrl: 'https://github.com/ChrisPaulDillon/PowerBuddy-Next'\n      },\n      {\n        linkText: 'Backend',\n        linkUrl: 'https://github.com/ChrisPaulDillon/PowerBuddy.API'\n      }\n    ],\n    categories: ['React', 'Redux', 'C#', 'Chakra UI']\n  },\n  {\n    id: 6,\n    title: 'ImFeelingBullish.com',\n    description:\n      'Cryptocurrency aggregator used to automatically filter out potential high return crypto based on a multitude of data points.',\n    extendedDescription:\n      'Cryptocurrency aggregator used to automatically filter out potential high return crypto based on a multitude of data points. This project was designed to automatically filter out coins that were being manipulated in the market and provide additional information on tokens that had high return potential.',\n    linkItems: [\n      {\n        linkText: 'Front End',\n        linkUrl: 'https://github.com/ChrisPaulDillon/ImFeelingBullish-Next'\n      }\n    ],\n    categories: ['React', 'Web3', 'Chakra UI', 'Coingecko API']\n  }\n]\n", "import { ContactFormExtended } from '../features/contact/ContactFormExtended'\nimport { PageContainer } from '../features/layout/PageContainer'\n\nconst ContactPage = () => (\n  <PageContainer>\n    <ContactFormExtended />\n  </PageContainer>\n)\n\nexport default ContactPage\n", "import {\n  Box,\n  Flex,\n  HStack,\n  Icon,\n  IconButton,\n  Text,\n  VStack,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { Link } from '@remix-run/react'\nimport { BsGithub } from 'react-icons/bs'\nimport { FaLinkedin } from 'react-icons/fa'\nimport { MdEmail, MdLocationOn } from 'react-icons/md'\nimport { HomeBodyText } from '../home/HomeBodyText'\nimport { SectionHeading } from '../shared/SectionHeading'\nimport { ContactFormContainer } from './ContactFormContainer'\n\nexport const ContactFormExtended = () => {\n  const bgColor = useColorModeValue('whiteAlpha.500', 'gray.800')\n  const buttonBgColor = useColorModeValue('gray.100', 'whiteAlpha.200')\n  const buttonHoverBgColor = useColorModeValue('brand.50', 'brand.900')\n  const iconColor = useColorModeValue('brand.500', 'brand.300')\n  const textColor = useColorModeValue('gray.700', 'gray.300')\n  const contactBg = useColorModeValue('white', 'whiteAlpha.100')\n  const contactHoverBg = useColorModeValue('gray.50', 'whiteAlpha.200')\n  \n  return (\n    <Box\n      bg={bgColor}\n      borderRadius=\"2xl\"\n      p={{ sm: 5, md: 5, lg: 16 }}\n      w=\"100%\"\n      boxShadow=\"xl\"\n    >\n      <Flex flexDir={{ base: 'column', lg: 'row' }} gap={8}>\n        <Box flex=\"1\">\n          <SectionHeading>Get in Touch</SectionHeading>\n          <HomeBodyText\n            mt={4}\n            textAlign={{ base: 'center', lg: 'left' }}\n            fontSize=\"lg\"\n            color={useColorModeValue('gray.600', 'gray.300')}\n          >\n            I'm always interested in hearing about new projects and opportunities.\n            Feel free to reach out!\n          </HomeBodyText>\n\n          <VStack spacing={4} mt={8} align={{ base: 'center', lg: 'flex-start' }}>\n            <Flex\n              align=\"center\"\n              gap={3}\n              p={3}\n              borderRadius=\"lg\"\n              bg={contactBg}\n              w={{ base: 'full', lg: 'auto' }}\n              minW=\"250px\"\n              transition=\"all 0.2s\"\n              _hover={{\n                bg: contactHoverBg,\n                transform: 'translateY(-2px)'\n              }}\n            >\n              <Icon as={MdEmail} color={iconColor} boxSize={5} />\n              <Text fontSize=\"md\" color={textColor} fontWeight=\"medium\">\n                chrispauldillon@live.com\n              </Text>\n            </Flex>\n\n            <Flex\n              align=\"center\"\n              gap={3}\n              p={3}\n              borderRadius=\"lg\"\n              bg={contactBg}\n              w={{ base: 'full', lg: 'auto' }}\n              minW=\"250px\"\n              transition=\"all 0.2s\"\n              _hover={{\n                bg: contactHoverBg,\n                transform: 'translateY(-2px)'\n              }}\n            >\n              <Icon as={MdLocationOn} color={iconColor} boxSize={5} />\n              <Text fontSize=\"md\" color={textColor} fontWeight=\"medium\">\n                Scotland, United Kingdom\n              </Text>\n            </Flex>\n          </VStack>\n\n          <HStack \n            mt={8} \n            spacing={4} \n            justify={{ base: 'center', lg: 'flex-start' }}\n          >\n            <Link to=\"https://www.linkedin.com/in/christopher-d-106005183/\">\n              <IconButton\n                aria-label=\"linkedin\"\n                icon={<FaLinkedin size=\"24px\" />}\n                size=\"lg\"\n                borderRadius=\"full\"\n                bg={buttonBgColor}\n                color={iconColor}\n                _hover={{ \n                  bg: buttonHoverBgColor,\n                  transform: 'translateY(-2px)'\n                }}\n                transition=\"all 0.3s\"\n              />\n            </Link>\n            <Link to=\"https://github.com/ChrisPaulDillon\">\n              <IconButton\n                aria-label=\"github\"\n                icon={<BsGithub size=\"24px\" />}\n                size=\"lg\"\n                borderRadius=\"full\"\n                bg={buttonBgColor}\n                color={iconColor}\n                _hover={{ \n                  bg: buttonHoverBgColor,\n                  transform: 'translateY(-2px)'\n                }}\n                transition=\"all 0.3s\"\n              />\n            </Link>\n          </HStack>\n        </Box>\n\n        <Box flex=\"1\">\n          <ContactFormContainer />\n        </Box>\n      </Flex>\n    </Box>\n  )\n}", "import {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Textarea,\n  VStack,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { useForm } from 'react-hook-form'\nimport { BsPerson } from 'react-icons/bs'\nimport { MdOutlineEmail, MdSubject } from 'react-icons/md'\nimport { useAppToast } from '../../hooks/useAppToast'\n\nexport const ContactFormContainer = () => {\n  const { register, handleSubmit, formState: { errors } } = useForm()\n  const { toastSuccess } = useAppToast()\n\n  const handleFormSubmit = (values: any) => {\n    toastSuccess('Success', 'Opening your email client', 'top-right')\n    window.location.href = `mailto:chrispauldillon@live.com?subject=${values.subject}&body=${values.body} Best regards, ${values.name}`\n  }\n\n  const inputBg = useColorModeValue('gray.100', 'whiteAlpha.100')\n  const borderColor = useColorModeValue('purple.300', 'purple.500')\n  const hoverBorderColor = useColorModeValue('purple.500', 'purple.300')\n\n  return (\n    <Box \n      bg={useColorModeValue('white', 'gray.800')} \n      borderRadius=\"xl\"\n      boxShadow=\"xl\"\n      p={8}\n      m={{ base: 5 }}\n      borderWidth=\"1px\"\n      borderColor={borderColor}\n      _hover={{ borderColor: hoverBorderColor }}\n      transition=\"all 0.3s\"\n    >\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <VStack spacing={5}>\n          <FormControl isRequired>\n            <FormLabel fontSize=\"lg\" fontWeight=\"medium\">Your Name</FormLabel>\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\">\n                <BsPerson color=\"gray.800\" />\n              </InputLeftElement>\n              <Input\n                type=\"text\"\n                placeholder=\"John Doe\"\n                bg={inputBg}\n                borderRadius=\"lg\"\n                size=\"lg\"\n                _hover={{ borderColor: hoverBorderColor }}\n                _focus={{ borderColor: hoverBorderColor, boxShadow: 'outline' }}\n                {...register('name', { required: true })}\n              />\n            </InputGroup>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel fontSize=\"lg\" fontWeight=\"medium\">Subject</FormLabel>\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\">\n                <MdSubject color=\"gray.800\" />\n              </InputLeftElement>\n              <Input\n                type=\"text\"\n                placeholder=\"What's this about?\"\n                bg={inputBg}\n                borderRadius=\"lg\"\n                size=\"lg\"\n                _hover={{ borderColor: hoverBorderColor }}\n                _focus={{ borderColor: hoverBorderColor, boxShadow: 'outline' }}\n                {...register('subject', { required: true })}\n              />\n            </InputGroup>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel fontSize=\"lg\" fontWeight=\"medium\">Message</FormLabel>\n            <Textarea\n              placeholder=\"Your message...\"\n              bg={inputBg}\n              borderRadius=\"lg\"\n              size=\"lg\"\n              minH=\"200px\"\n              _hover={{ borderColor: hoverBorderColor }}\n              _focus={{ borderColor: hoverBorderColor, boxShadow: 'outline' }}\n              {...register('body', { required: true })}\n            />\n          </FormControl>\n\n          <Button\n            type=\"submit\"\n            size=\"lg\"\n            width=\"full\"\n            colorScheme=\"purple\"\n            borderRadius=\"lg\"\n            _hover={{\n              transform: 'translateY(-2px)',\n              boxShadow: 'lg',\n            }}\n            transition=\"all 0.3s\"\n          >\n            Send Message\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  )\n}", "import {\n  Box,\n  Flex,\n  ToastPosition,\n  chakra,\n  useColorMode,\n  useColorModeValue,\n  useToast\n} from '@chakra-ui/react'\nimport { FaBan, FaCheckCircle, FaExclamation } from 'react-icons/fa'\nimport { IoMdCheckmarkCircle } from 'react-icons/io'\n\ninterface ToastBodyProps {\n  title: string\n  description: string\n  toastType: string\n  Icon: any\n  color: string\n}\n\nconst ToastBody: React.FC<ToastBodyProps> = ({\n  title,\n  description,\n  toastType,\n  Icon,\n  color\n}) => {\n  return (\n    <Flex w=\"full\" alignItems=\"center\" justifyContent=\"center\">\n      <Flex\n        maxW=\"sm\"\n        w=\"full\"\n        mx=\"auto\"\n        bg={useColorModeValue('white', 'gray.800')}\n        shadow=\"md\"\n        rounded=\"lg\"\n        overflow=\"hidden\"\n      >\n        <Flex justifyContent=\"center\" alignItems=\"center\" w={12} bg={color}>\n          <Icon as={IoMdCheckmarkCircle} color=\"white\" boxSize={6} />\n        </Flex>\n\n        <Box mx={-3} py={2} px={4}>\n          <Box mx={3}>\n            <chakra.span color={color} fontWeight=\"bold\">\n              {title ?? toastType}\n            </chakra.span>\n            <chakra.p\n              color={useColorModeValue('gray.600', 'gray.200')}\n              fontSize=\"sm\"\n            >\n              {description}\n            </chakra.p>\n          </Box>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\ninterface ToastProps {\n  title: string\n  description: string\n}\n\nexport const ToastSuccess: React.FC<ToastProps> = ({ title, description }) => {\n  return (\n    <ToastBody\n      title={title}\n      description={description}\n      toastType=\"Success\"\n      Icon={FaCheckCircle}\n      color=\"green.500\"\n    />\n  )\n}\n\nexport const ToastError: React.FC<ToastProps> = ({ title, description }) => {\n  const { colorMode } = useColorMode()\n\n  return (\n    <ToastBody\n      title={title}\n      description={description}\n      toastType=\"Error\"\n      Icon={FaBan}\n      color=\"red.500\"\n    />\n  )\n}\n\nexport const ToastWarning: React.FC<ToastProps> = ({ title, description }) => {\n  const { colorMode } = useColorMode()\n\n  return (\n    <ToastBody\n      title={title}\n      description={description}\n      toastType=\"Warning\"\n      Icon={FaExclamation}\n      color=\"orange.500\"\n    />\n  )\n}\n\nexport const useAppToast = () => {\n  const toast = useToast()\n\n  const toastSuccess = (\n    title: string,\n    description: string,\n    position?: ToastPosition\n  ) => {\n    toast({\n      position: position || 'top',\n      render: () => <ToastSuccess title={title} description={description} />,\n      duration: 5000,\n      isClosable: true\n    })\n  }\n\n  const toastError = (\n    title: string,\n    description: string,\n    position?: ToastPosition\n  ) => {\n    toast({\n      position: position || 'top',\n      render: () => <ToastError title={title} description={description} />,\n      duration: 5000,\n      isClosable: true\n    })\n  }\n\n  const toastWarning = (\n    title: string,\n    description: string,\n    position?: ToastPosition\n  ) => {\n    toast({\n      position: position || 'top',\n      render: () => <ToastWarning title={title} description={description} />,\n      duration: 5000,\n      isClosable: true\n    })\n  }\n\n  return { toastSuccess, toastError, toastWarning, ...toast }\n}\n", "import { Box, Container, Flex, VStack } from '@chakra-ui/react'\nimport { useRef } from 'react'\nimport { useInViewport } from 'react-in-viewport'\nimport { AboutMeSection } from '../features/home/AboutMeSection'\nimport { AcademicSection } from '../features/home/AcademicSection'\nimport { ContactMeSection } from '../features/home/ContactMeSection'\nimport { IntroSection } from '../features/home/IntroSection'\nimport { PortfolioSection } from '../features/home/PortfolioSection'\nimport { WorkExperienceSection } from '../features/home/WorkExperienceSection'\n\nconst Index = () => {\n  const contactMeRef = useRef(null)\n  const { enterCount: contactMeEnterCount } = useInViewport(contactMeRef, {\n    threshold: 0.5\n  })\n\n  return (\n    <Container maxW=\"full\" px={0}>\n      <VStack\n        spacing={{ base: 10, md: 14 }}\n        pt={{ base: \"80px\", md: \"100px\" }}\n        px={{ base: 4, sm: 6, md: 8, lg: 10 }}\n      >\n        <IntroSection />\n        \n        <Box w=\"full\" px={{ base: 2, md: 4 }}>\n          <AboutMeSection />\n        </Box>\n\n        <Box w=\"full\">\n          <Flex \n            direction={{ base: 'column', lg: 'row' }} \n            gap={{ base: 8, lg: 12 }}\n            px={{ base: 2, md: 4 }}\n          >\n            <Box flex=\"1\">\n              <WorkExperienceSection />\n            </Box>\n            <Box flex=\"1\">\n              <AcademicSection />\n            </Box>\n          </Flex>\n        </Box>\n\n        <Box w=\"full\" px={{ base: 2, md: 4 }}>\n          <PortfolioSection />\n        </Box>\n\n        <Box w=\"full\" px={{ base: 2, md: 4 }} pb={{ base: 8, md: 10 }}>\n          <ContactMeSection ref={contactMeRef} />\n        </Box>\n      </VStack>\n    </Container>\n  )\n}\n\nexport default Index", "import { Box, BoxProps, Flex, Stack } from '@chakra-ui/react'\nimport { ProfileAvatar } from '../shared/ProfileAvatar'\nimport { SectionHeading } from '../shared/SectionHeading'\nimport { HomeBodyText } from './HomeBodyText'\n\ninterface AboutMeSectionProps extends BoxProps {}\n\nexport const AboutMeSection: React.FC<AboutMeSectionProps> = props => (\n  <Box as=\"section\">\n    <SectionHeading>About Me</SectionHeading>\n    <Stack direction={{ base: 'column', lg: 'row' }} w=\"100%\" {...props}>\n      <HomeBodyText>\n        Hello! My name is Chris and I have a passionate for designing and\n        developing technology. I started programming at the young age of 14,\n        creating scripts for the popular online MMORPG game called RuneScape.\n        I am a Senior Software Engineer with my predominant languages being C#, Go, React & TypeScript.\n        <br /> <br />\n        In my spare time, I enjoy keeping fit and going to the gym. I am also an\n        avid reader and study many topics such as programming, neuroscience and\n        psychology.\n      </HomeBodyText>\n      <Flex justifyContent=\"center\" pb={{ base: 4, sm: 4, lg: 0 }} w=\"100%\">\n        <ProfileAvatar />\n      </Flex>\n    </Stack>\n  </Box>\n)\n", "import { Box, BoxProps, Image, useColorModeValue } from '@chakra-ui/react'\nimport { useAssetUrl } from '../../hooks/useAssetUrl'\n\nexport const ProfileAvatar: React.FC<BoxProps> = props => {\n  const imageUrl = useAssetUrl('/images/chris.png')\n  \n  return (\n    <Box\n      display=\"inline-block\"\n      borderStyle=\"solid\"\n      borderWidth={2}\n      boxShadow=\"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\n      borderColor={useColorModeValue('gray.700', 'navy.400')}\n      {...props}\n    >\n      <Image\n        src={imageUrl}\n        alt=\"Profile image\"\n        objectFit='cover'\n        width={250}\n        height={350}\n        loading='lazy'\n      />\n    </Box>\n  )\n}", "import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Icon,\n  Stack,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { HiAcademicCap } from 'react-icons/hi'\nimport { SectionHeading } from '../shared/SectionHeading'\n\nconst academicHistory = [\n  {\n    degree: 'MSc Big Data Technologies',\n    institution: 'Glasgow Caledonian University',\n    date: '2016 - 2017'\n  },\n  {\n    degree: 'BSc Computer Science',\n    institution: 'Glasgow Caledonian University',\n    date: '2014 - 2016'\n  },\n  {\n    degree: 'HND Software Development',\n    institution: 'City of Glasgow College',\n    date: '2012 - 2014'\n  }\n]\n\nexport const AcademicSection = () => {\n  const cardBg = useColorModeValue('white', 'gray.800')\n  const borderColor = useColorModeValue('red.100', 'red.700')\n  const iconBg = useColorModeValue('red.50', 'red.900')\n  const iconColor = useColorModeValue('red.500', 'red.200')\n  const institutionColor = useColorModeValue('gray.600', 'gray.400')\n  \n  return (\n    <Box w=\"100%\">\n      <SectionHeading>Academic Achievements</SectionHeading>\n      <Stack spacing={4} mt={6}>\n        {academicHistory.map((education, index) => (\n          <Card\n            key={index}\n            bg={cardBg}\n            borderWidth=\"1px\"\n            borderColor={borderColor}\n            borderRadius=\"xl\"\n            overflow=\"hidden\"\n            transition=\"all 0.3s\"\n            _hover={{\n              transform: 'translateY(-2px)',\n              boxShadow: 'lg',\n              borderColor: useColorModeValue('red.300', 'red.500')\n            }}\n          >\n            <CardHeader pb={2}>\n              <Flex align=\"center\" gap={4}>\n                <Box\n                  p={2}\n                  borderRadius=\"lg\"\n                  bg={iconBg}\n                >\n                  <Icon \n                    as={HiAcademicCap} \n                    boxSize={5}\n                    color={iconColor}\n                  />\n                </Box>\n                <Box>\n                  <Heading\n                    size=\"md\"\n                    bgGradient={useColorModeValue(\n                      'linear(to-r, red.600, purple.500)',\n                      'linear(to-r, red.200, purple.200)'\n                    )}\n                    bgClip=\"text\"\n                  >\n                    {education.degree}\n                  </Heading>\n                  <Text\n                    fontSize=\"sm\"\n                    color={institutionColor}\n                    mt={1}\n                  >\n                    {education.date}\n                  </Text>\n                </Box>\n              </Flex>\n            </CardHeader>\n            <CardBody pt={0}>\n              <Text\n                fontSize=\"md\"\n                color={useColorModeValue('gray.700', 'gray.300')}\n              >\n                {education.institution}\n              </Text>\n            </CardBody>\n          </Card>\n        ))}\n      </Stack>\n    </Box>\n  )\n}", "import { Box, BoxProps } from '@chakra-ui/react'\nimport { MutableRefObject, forwardRef } from 'react'\nimport { ContactFormExtended } from '../contact/ContactFormExtended'\n\nexport const ContactMeSection = forwardRef<MutableRefObject<null>, BoxProps>(\n  (props, ref) => (\n    <Box as=\"section\" w=\"100%\" ref={ref} {...props}>\n      <ContactFormExtended />\n    </Box>\n  )\n)\n", "import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  StackProps,\n  VStack,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { Link } from '@remix-run/react'\nimport React from 'react'\nimport { ProgrammingCard } from '../../features/home/ProgrammingCard'\nimport { HomeBodyText } from './HomeBodyText'\n\nexport const IntroSection: React.FC<StackProps> = props => (\n  <VStack\n    as=\"section\"\n    spacing={{ base: 4, md: 6 }}\n    alignItems={{ base: 'center', lg: 'flex-start' }}\n    w=\"full\"\n    {...props}\n  >\n    <Heading\n      as=\"h1\"\n      fontSize={{ base: '3xl', sm: '4xl', md: '5xl', lg: '6xl' }}\n      bgGradient={useColorModeValue(\n        'linear(to-r, purple.600, red.500)',\n        'linear(to-r, purple.200, red.200)'\n      )}\n      bgClip=\"text\"\n      letterSpacing=\"tight\"\n      lineHeight={{ base: 1.3, md: 1.2 }}\n    >\n      Chris Dillon\n    </Heading>\n\n    <Heading\n      as=\"h2\"\n      fontSize={{ base: 'xl', sm: '2xl', md: '3xl', lg: '4xl' }}\n      fontWeight=\"bold\"\n      color={useColorModeValue('gray.700', 'gray.300')}\n      lineHeight={{ base: 1.4, md: 1.2 }}\n    >\n      Full Stack Software Engineer\n    </Heading>\n\n    <HomeBodyText\n      fontSize={{ base: 'md', sm: 'lg', md: 'xl' }}\n      textAlign={{ base: 'center', lg: 'left' }}\n      maxW={{ base: 'full', md: '600px' }}\n      color={useColorModeValue('gray.600', 'gray.400')}\n    >\n      I&apos;m a Senior Software Engineer specialising in building exceptional\n      digital experiences and bringing products to scale.\n    </HomeBodyText>\n\n    <Flex\n      direction={{ base: 'column', sm: 'row' }}\n      gap={4}\n      w=\"full\"\n      justify={{ base: 'center', lg: 'flex-start' }}\n      align=\"center\"\n      mt={{ base: 4, md: 6 }}\n    >\n      <Box\n        display=\"flex\"\n        gap={2}\n        flexWrap=\"wrap\"\n        justifyContent={{ base: 'center', lg: 'flex-start' }}\n      >\n        <ProgrammingCard label=\"C#\" />\n        <ProgrammingCard label=\"TypeScript\" />\n        <ProgrammingCard label=\"React\" />\n      </Box>\n    </Flex>\n\n    <Box\n      w=\"full\"\n      pt={{ base: 4, md: 6 }}\n      textAlign={{ base: 'center', lg: 'left' }}\n    >\n      <Link to=\"/portfolio\">\n        <Button\n          colorScheme=\"purple\"\n          size={{ base: 'md', md: 'lg' }}\n          px={{ base: 6, md: 8 }}\n          fontSize={{ base: 'sm', md: 'md' }}\n          _hover={{\n            transform: 'translateY(-2px)',\n            boxShadow: 'lg'\n          }}\n          transition=\"all 0.3s\"\n        >\n          View My Portfolio\n        </Button>\n      </Link>\n    </Box>\n  </VStack>\n)\n", "import { Box, HStack, Icon, StackProps, useColorModeValue } from '@chakra-ui/react'\nimport { FaCode } from 'react-icons/fa'\nimport { HomeBodyText } from './HomeBodyText'\n\ninterface ProgrammingCardProps extends StackProps {\n  label: string\n}\n\nexport const ProgrammingCard: React.FC<ProgrammingCardProps> = ({\n  label,\n  ...rest\n}) => {\n  return (\n    <HStack\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      border=\"1px\"\n      borderRadius=\"full\"\n      borderColor={useColorModeValue('red.200', 'red.500')}\n      bg={useColorModeValue('whiteAlpha.800', 'whiteAlpha.100')}\n      px={4}\n      py={2}\n      m={1}\n      transition=\"all 0.3s\"\n      _hover={{\n        transform: 'translateY(-2px)',\n        borderColor: useColorModeValue('red.400', 'red.300'),\n        boxShadow: 'md'\n      }}\n      {...rest}\n    >\n      <Icon \n        as={FaCode} \n        color={useColorModeValue('red.500', 'red.300')}\n        boxSize={4}\n      />\n      <HomeBodyText\n        color={useColorModeValue('gray.700', 'gray.200')}\n        fontSize={{ base: 'sm', md: 'md' }}\n        fontWeight=\"medium\"\n        m={0}\n      >\n        {label}\n      </HomeBodyText>\n    </HStack>\n  )\n}", "import { Box, BoxProps, Flex } from '@chakra-ui/react'\nimport { MutableRefObject, forwardRef } from 'react'\nimport { PortfolioCard } from '../portfolio/PortfolioCard'\nimport { PORTFOLIO_ITEMS } from '../portfolio/const'\nimport { SectionHeading } from '../shared/SectionHeading'\nimport { HomeBodyText } from './HomeBodyText'\n\nexport const PortfolioSection = forwardRef<MutableRefObject<null>, BoxProps>(\n  (props, ref) => (\n    <Box as=\"section\" ref={ref} {...props}>\n      <SectionHeading>Portfolio</SectionHeading>\n      <HomeBodyText>\n        Here is just some of the cool projects I&apos;ve worked on\n      </HomeBodyText>\n      <Flex\n        flexDir={'row'}\n        flexWrap={'wrap'}\n        justifyContent={{ base: 'center', lg: 'left' }}\n      >\n        {PORTFOLIO_ITEMS.map(item => (\n          <PortfolioCard key={item.title} {...item} />\n        ))}\n      </Flex>\n    </Box>\n  )\n)\n", "import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Icon,\n  Stack,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport { MdWork } from 'react-icons/md'\nimport { WORK_EXPERIENCE_DATA } from '../work-experience/const'\nimport { SectionHeading } from '../shared/SectionHeading'\n\nexport const WorkExperienceSection = () => {\n  const cardBg = useColorModeValue('white', 'gray.800')\n  const borderColor = useColorModeValue('purple.100', 'purple.700')\n  const iconBg = useColorModeValue('purple.50', 'purple.900')\n  const iconColor = useColorModeValue('purple.500', 'purple.200')\n  const dateColor = useColorModeValue('gray.600', 'gray.400')\n  \n  return (\n    <Box w=\"100%\">\n      <SectionHeading>Work Experience</SectionHeading>\n      <Stack spacing={4} mt={6}>\n        {WORK_EXPERIENCE_DATA.map((experience, index) => (\n          <Card\n            key={index}\n            bg={cardBg}\n            borderWidth=\"1px\"\n            borderColor={borderColor}\n            borderRadius=\"xl\"\n            overflow=\"hidden\"\n            transition=\"all 0.3s\"\n            _hover={{\n              transform: 'translateY(-2px)',\n              boxShadow: 'lg',\n              borderColor: useColorModeValue('purple.300', 'purple.500')\n            }}\n          >\n            <CardHeader pb={2}>\n              <Flex align=\"center\" gap={4}>\n                <Box\n                  p={2}\n                  borderRadius=\"lg\"\n                  bg={iconBg}\n                >\n                  <Icon \n                    as={MdWork} \n                    boxSize={5}\n                    color={iconColor}\n                  />\n                </Box>\n                <Box>\n                  <Heading\n                    size=\"md\"\n                    bgGradient={useColorModeValue(\n                      'linear(to-r, purple.600, red.500)',\n                      'linear(to-r, purple.200, red.200)'\n                    )}\n                    bgClip=\"text\"\n                  >\n                    {experience.companyName}\n                  </Heading>\n                  <Text\n                    fontSize=\"sm\"\n                    color={dateColor}\n                    mt={1}\n                  >\n                    {experience.date}\n                  </Text>\n                </Box>\n              </Flex>\n            </CardHeader>\n            <CardBody pt={0}>\n              <Text\n                fontSize=\"md\"\n                fontWeight=\"medium\"\n                color={useColorModeValue('gray.700', 'gray.300')}\n              >\n                {experience.role}\n              </Text>\n            </CardBody>\n          </Card>\n        ))}\n      </Stack>\n    </Box>\n  )\n}", "export default {'entry':{'module':'/build/entry.client-SKT63VDN.js','imports':['/build/_shared/chunk-H2LOK4OR.js','/build/_shared/chunk-F5BHF6F2.js','/build/_shared/chunk-ACVXT7VY.js','/build/_shared/chunk-S5NB2QQZ.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SLEF6UYJ.js','imports':['/build/_shared/chunk-36WVHAX4.js','/build/_shared/chunk-HX55Y547.js','/build/_shared/chunk-F3LLVCX4.js','/build/_shared/chunk-VLS5E2A2.js','/build/_shared/chunk-U2FGD5UM.js','/build/_shared/chunk-2AKUTJQ7.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-NIHJZMZL.js','imports':['/build/_shared/chunk-YAS4JAKK.js','/build/_shared/chunk-J6WISGU3.js','/build/_shared/chunk-EFBJUPQZ.js','/build/_shared/chunk-NW6Y7R7V.js','/build/_shared/chunk-YD4IA2WW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/contact':{'id':'routes/contact','parentId':'root','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-NZROZJGQ.js','imports':['/build/_shared/chunk-Q2MTDVLK.js','/build/_shared/chunk-EFBJUPQZ.js','/build/_shared/chunk-NW6Y7R7V.js','/build/_shared/chunk-YD4IA2WW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/experience':{'id':'routes/experience','parentId':'root','path':'experience','index':undefined,'caseSensitive':undefined,'module':'/build/routes/experience-THF6UVY3.js','imports':['/build/_shared/chunk-Q2MTDVLK.js','/build/_shared/chunk-YAS4JAKK.js','/build/_shared/chunk-YD4IA2WW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/portfolio':{'id':'routes/portfolio','parentId':'root','path':'portfolio','index':undefined,'caseSensitive':undefined,'module':'/build/routes/portfolio-FJJVXYKM.js','imports':['/build/_shared/chunk-Q2MTDVLK.js','/build/_shared/chunk-J6WISGU3.js','/build/_shared/chunk-NW6Y7R7V.js','/build/_shared/chunk-YD4IA2WW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/technology':{'id':'routes/technology','parentId':'root','path':'technology','index':undefined,'caseSensitive':undefined,'module':'/build/routes/technology-LGTX7W7F.js','imports':['/build/_shared/chunk-Q2MTDVLK.js','/build/_shared/chunk-YD4IA2WW.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'8ed2077c','hmr':{'runtime':'/build/_shared\\\\chunk-S5NB2QQZ.js','timestamp':1747124519406},'url':'/build/manifest-8ED2077C.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\chris\\\\source\\\\repos\\\\portfolio-remix\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/experience.tsx\";\nimport * as route2 from \"./routes/technology.tsx\";\nimport * as route3 from \"./routes/portfolio.tsx\";\nimport * as route4 from \"./routes/contact.tsx\";\nimport * as route5 from \"./routes/_index.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/experience\": {\n      id: \"routes/experience\",\n      parentId: \"root\",\n      path: \"experience\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/technology\": {\n      id: \"routes/technology\",\n      parentId: \"root\",\n      path: \"technology\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/portfolio\": {\n      id: \"routes/portfolio\",\n      parentId: \"root\",\n      path: \"portfolio\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/contact\": {\n      id: \"routes/contact\",\n      parentId: \"root\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": "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",
  "names": ["useEffect", "Container", "Grid", "GridItem", "useColorModeValue", "jsxDEV", "jsxDEV", "useColorModeValue", "Box", "Container", "HStack", "IconButton", "useColorModeValue", "useColorModeValue", "jsxDEV", "Link", "useLocation", "jsxDEV", "Link", "Icon", "Text", "useColorModeValue", "Link", "useLocation", "jsxDEV", "useColorModeValue", "VStack", "jsxDEV", "useColorModeValue", "VStack", "jsxDEV", "useColorModeValue", "Box", "Container", "HStack", "IconButton", "jsxDEV", "Grid", "GridItem", "Container", "mode", "mode", "jsxDEV", "useEffect", "Box", "Flex", "Grid", "Heading", "Icon", "Text", "useColorModeValue", "MdWork", "Box", "jsxDEV", "Heading", "jsxDEV", "jsxDEV", "useColorModeValue", "Box", "Text", "Grid", "Flex", "Icon", "MdWork", "Heading", "Box", "Container", "Flex", "Image", "Text", "useColorModeValue", "VStack", "jsxDEV", "useColorModeValue", "Box", "VStack", "Image", "Text", "Container", "Flex", "Flex", "Box", "Card", "CardBody", "CardHeader", "Flex", "Heading", "Icon", "Image", "Stack", "Tag", "Text", "useColorModeValue", "Link", "BsFolderFill", "Text", "jsxDEV", "jsxDEV", "useColorModeValue", "Card", "CardHeader", "Flex", "Box", "Icon", "BsFolderFill", "Heading", "Link", "CardBody", "Stack", "Image", "Tag", "Text", "jsxDEV", "Flex", "Box", "Flex", "HStack", "Icon", "IconButton", "Text", "VStack", "useColorModeValue", "Link", "BsGithub", "FaLinkedin", "Box", "Button", "VStack", "useColorModeValue", "Box", "Flex", "chakra", "useColorMode", "useColorModeValue", "jsxDEV", "Icon", "jsxDEV", "useColorModeValue", "Box", "VStack", "Button", "jsxDEV", "useColorModeValue", "Box", "Flex", "VStack", "Icon", "Text", "HStack", "Link", "IconButton", "FaLinkedin", "BsGithub", "jsxDEV", "Box", "Container", "Flex", "VStack", "Box", "Flex", "Stack", "Box", "Image", "useColorModeValue", "jsxDEV", "Box", "useColorModeValue", "Image", "jsxDEV", "Box", "Stack", "Flex", "Box", "Card", "CardBody", "CardHeader", "Flex", "Heading", "Icon", "Stack", "Text", "useColorModeValue", "jsxDEV", "useColorModeValue", "Box", "Stack", "Card", "CardHeader", "Flex", "Icon", "Heading", "Text", "CardBody", "Box", "jsxDEV", "Box", "Box", "Button", "Flex", "Heading", "VStack", "useColorModeValue", "Link", "HStack", "Icon", "useColorModeValue", "jsxDEV", "HStack", "useColorModeValue", "Icon", "jsxDEV", "VStack", "Heading", "useColorModeValue", "Flex", "Box", "Link", "Button", "Box", "Flex", "forwardRef", "jsxDEV", "forwardRef", "Box", "Flex", "Box", "Card", "CardBody", "CardHeader", "Flex", "Heading", "Icon", "Stack", "Text", "useColorModeValue", "MdWork", "jsxDEV", "useColorModeValue", "Box", "Stack", "Card", "CardHeader", "Flex", "Icon", "MdWork", "Heading", "Text", "CardBody", "jsxDEV", "Container", "VStack", "Box", "Flex", "mode"]
}
